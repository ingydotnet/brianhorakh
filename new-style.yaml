---
+grammar: data-tlc
+toprule: data_tlc
+version: '1.0'
_:
  .rgx: \s*
__:
  .rgx: \s+
bind_statement:
  .all:
  - .rgx: \s*bind
  - .any:
    - .ref: variable
    - .ref: tag
  - .ref: __
  - .any:
    - .ref: variable
    - .ref: scalar
    - .ref: tag
block:
  .all:
  - .rgx: \s*\{\{
  - +min: 1
    .any:
    - .ref: jscomment
    - .ref: cmdline
  - .rgx: \s*\}\}
boolean:
  .rgx: \s*(true|false)
cmdline:
  .all:
  - .any: &1
    - .ref: set_statement
    - .ref: bind_statement
    - .ref: if_statement
    - .ref: foreach_statement
    - .ref: while_statement
    - .ref: command
  - +min: 0
    -flat: 1
    .all:
    - .rgx: \s*;
    - .any: *1
  - +max: 1
    .rgx: \s*;
command:
  .all:
  - .rgx: -(?:(\w+)\#)?(\w+)
  - +max: 1
    .all:
    - .ref: value
    - +min: 0
      -flat: 1
      .all:
      - .ref: _
      - .ref: value
data_tlc:
  .all:
  - .all:
    - .any: &2
      - .ref: jscomment
      - .ref: if_statement
      - .ref: while_statement
      - .ref: foreach_statement
      - .ref: set_statement
      - .ref: bind_statement
      - .ref: command
    - +min: 0
      -flat: 1
      .all:
      - +min: 0
        .ref: lb
      - .any: *2
    - +max: 1
      +min: 0
      .ref: lb
  - .ref: _
foreach_statement:
  .all:
  - .rgx: \s*foreach
  - .ref: variable
  - .rgx: \s*in
  - .ref: variable
  - .ref: _
  - .ref: block
hexcolor:
  .rgx: \s*\#([0-9a-fA-F]{6})
if_statement:
  .all:
  - .rgx: \s*if\s*\(
  - .ref: command
  - .rgx: \s*\)
  - .ref: block
  - +max: 1
    .all:
    - .rgx: \s*else
    - .ref: block
integer:
  .rgx: \s*(\-?[0-9]+)
jscomment:
  .rgx: \s*/\*.*?\*/
lb:
  .rgx: \s*(;|\r?\n)
longopt:
  .any:
  - .all:
    - .rgx: \s*\-\-([a-zA-Z][a-zA-Z0-9\-]+)=
    - .ref: value
  - .rgx: \s*\-\-([a-zA-Z][a-zA-Z0-9\-]+)
scalar:
  .rgx: -'((?:\\'|[^'])*)'
set_statement:
  .all:
  - .rgx: \s*set
  - .any:
    - .ref: variable
    - .ref: tag
  - .ref: _
  - .any:
    - .ref: variable
    - .ref: scalar
    - .ref: tag
    - .ref: integer
    - .ref: boolean
    - .ref: hexcolor
    - .ref: tag
  - .ref: _
  - +max: 1
    .all:
    - .ref: value
    - +min: 0
      -flat: 1
      .all:
      - .ref: _
      - .ref: value
tag:
  .rgx: \s*\~([0-9A-Za-z_\-]+)
value:
  .any:
  - .ref: longopt
  - .ref: variable
  - .ref: integer
  - .ref: scalar
  - .ref: boolean
  - .ref: tag
  - .ref: hexcolor
variable:
  .rgx: \s*\$([a-zA-Z_]\w*)
while_statement:
  .all:
  - .rgx: \s*while\s*\(
  - .ref: command
  - .rgx: \s*\)
  - .ref: block
